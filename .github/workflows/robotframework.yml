name: Robot Framework Tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  schedule:
    - cron: '0 0 */2 * *' # Schedule to run every two days

jobs:
  robot-framework:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Set up Google Chrome
      run: |
        command -v google-chrome || (
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
          sudo apt-get update
          sudo apt-get install google-chrome-stable
        )
      shell: bash

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: |
          ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip- 
   
    - name: Delete Existing ChromeDriver
      run: sudo rm /usr/local/bin/chromedriver || true

    - name: Install ChromeDriver
      run: |
        CHROMEDRIVER_VERSION="120.0.6099.109"
        wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
 
    - name: Check Chrome Version
      run: google-chrome --version

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install Robot Framework
      run: pip install robotframework

    - name: Install dependencies
      run: |
        pip install --upgrade setuptools
        pip install -r requirements.txt

    - name: Install Robot Framework Browser
      run: pip install robotframework-browser
    
    - name: Delay for 1 minute
      run: |
        echo "Sleeping for 1 minutes"
        sleep 60

    - name: Run Robot Framework Tests
      id: robot-test
      run: |
        for file in ./Formsflow-RobotFramework/test-cases/AdminPermissions.robot; do
          echo "Running test case: $file"
          robot -d results "$file"
          echo "Sleeping for 1 minute before the next test case"
          sleep 60
        done
      env:
        CHROME_HEADLESS: true
    
    - name: Upload Robot Framework Logs
      uses: actions/upload-artifact@v2
      with:
        name: robot-logs
        path: Formsflow-RobotFramework/results

  check-status:
    runs-on: ubuntu-latest
    needs: robot-framework
    if: failure() 
    steps:  
    - name: Send Error Details to Google Chat
      env:
        GOOGLE_CHAT_WEBHOOK: ${{ secrets.WEBHOOK_URL_HERE }}
      run: |
        MESSAGE="${{ github.workflow }} workflow failed on branch ${{ github.ref }}.Error Details:${{ job.status }}: ${{ job.name }}${{ job.steps[0].name }}: ${{ job.steps[0].outcome }}"
          
        python - <<EOF
        import requests
        import json
        import os
        # Define the message to send
        message = {
            "text": "$MESSAGE",
            "cards": [
                {
                    "sections": [
                        {
                            "widgets": [
                                {
                                    "textParagraph": {
                                        "text": "$MESSAGE"
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        }
        # Send the message to Google Chat
        response = requests.post(
            os.environ["GOOGLE_CHAT_WEBHOOK"],
            headers={"Content-Type": "application/json"},
            data=json.dumps(message),
        )
        if response.status_code == 200:
            print("Message sent to Google Chat successfully")
        else:
            print(f"Failed to send message to Google Chat. Status code: {response.status_code}")
        EOF
